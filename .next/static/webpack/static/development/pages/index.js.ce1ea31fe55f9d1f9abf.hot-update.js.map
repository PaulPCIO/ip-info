{"version":3,"file":"static/webpack/static/development/pages/index.js.ce1ea31fe55f9d1f9abf.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { useState, useEffect } from 'react'\nimport { NextPage, NextPageContext, NextApiRequest, NextApiResponse } from 'next'\n\nconst TestApp: NextPage<any> = ({ ip }) => {\n  //   const [ip, setIp] = useState('')\n  const [fetching, setFetching] = useState(false)\n  const [country, setCountry] = useState<string | undefined>(undefined)\n\n  //   useEffect(() => {\n  //     const handleFetchIp = async () => {\n  //       const res = await fetch('https://api.ipify.org?format=json')\n  //       if (res.ok) {\n  //         const { ip } = await res.json()\n  //         if (ip) setIp(ip)\n  //       }\n  //     }\n  //     handleFetchIp()\n  //   }, [])\n\n  const handleGetCountry = async () => {\n    setFetching(true)\n    const res = await fetch(`/api/${ip}`)\n    const data = await res.json()\n    if (data) {\n      console.log(data)\n      setCountry(data.country_name)\n    }\n    setFetching(false)\n  }\n\n  return (\n    <div>\n      <div>IP: {ip ? ip : ''}</div>\n      {country && <div>Country: {country}</div>}\n      <br />\n      {ip && (\n        <button disabled={fetching} onClick={handleGetCountry}>\n          {fetching ? 'Fetching' : 'Get Country'}\n        </button>\n      )}\n    </div>\n  )\n}\n\ninterface PageContext extends NextPageContext {\n  req: NextApiRequest\n  res: NextApiResponse\n}\n\nTestApp.getInitialProps = async ({ req, res }: PageContext) => {\n  const ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress\n\n  return { ip }\n}\n\nexport default TestApp\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}