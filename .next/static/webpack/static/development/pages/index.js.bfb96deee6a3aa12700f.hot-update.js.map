{"version":3,"file":"static/webpack/static/development/pages/index.js.bfb96deee6a3aa12700f.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import { NextPage, NextPageContext, NextApiRequest, NextApiResponse } from 'next'\n\nconst InfoAPI: NextPage = () => null\ninterface PageContext extends NextPageContext {\n  req: NextApiRequest\n  res: NextApiResponse\n}\n\nInfoAPI.getInitialProps = async ({ req, res }: PageContext) => {\n  res.setHeader('Content-Type', 'application/json')\n  try {\n    const ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress\n    if (!ip) throw new Error('API error')\n\n    const response = await fetch(`https://freegeoip.app/json/${ip}`, {\n      method: 'get',\n      headers: {\n        accept: 'application/json',\n        // 'x-auth-token': apiKey,\n      },\n    })\n    if (!response.ok) throw new Error('API error')\n    const data = await response.json()\n    //   res.write(JSON.stringify({ ip }))\n    res.json({ ip })\n    res.end()\n  } catch (error) {\n    res.write(JSON.stringify({ message: error }))\n    res.end()\n  }\n}\n\nexport default InfoAPI\n"],"mappings":";;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAFA;AAFA;AACA;AAPA;AAMA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAcA;AACA;AACA;AAAA;AAAA;AACA;AAjBA;AAAA;AACA;AADA;AAAA;AAAA;AAmBA;AAAA;AAAA;AACA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuBA;;;;A","sourceRoot":""}