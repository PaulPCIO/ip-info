{"ast":null,"code":"var _jsxFileName = \"/Users/paulvandyk/Projects/Kenai/ipinfo/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { useState, useEffect } from 'react';\nexport default function TestApp() {\n  const {\n    0: ip,\n    1: setIp\n  } = useState('');\n  const {\n    0: fetching,\n    1: setFetching\n  } = useState(false);\n  const {\n    0: country,\n    1: setCountry\n  } = useState(undefined);\n  useEffect(() => {\n    const handleFetchIp = async () => {\n      const res = await fetch('https://api.ipify.org?format=json');\n\n      if (res.ok) {\n        const {\n          ip\n        } = await res.json();\n        if (ip) setIp(ip);\n      }\n    };\n\n    handleFetchIp();\n  }, []);\n\n  const handleGetCountry = async () => {\n    setFetching(true);\n    const res = await fetch(`/api/${ip}`);\n    const data = await res.json();\n\n    if (data) {\n      console.log(data);\n      setCountry(data.country_name);\n    }\n\n    setFetching(false);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"IP: \", ip ? ip : ''), country && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), ip && __jsx(\"button\", {\n    disabled: fetching,\n    onClick: handleGetCountry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, fetching ? 'Fetching' : 'Get Country'));\n}","map":{"version":3,"sources":["/Users/paulvandyk/Projects/Kenai/ipinfo/pages/index.tsx"],"names":["fetch","useState","useEffect","TestApp","ip","setIp","fetching","setFetching","country","setCountry","undefined","handleFetchIp","res","ok","json","handleGetCountry","data","console","log","country_name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM;AAAA,OAACC,EAAD;AAAA,OAAKC;AAAL,MAAcJ,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM;AAAA,OAACK,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAqBS,SAArB,CAAtC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,aAAa,GAAG,YAAY;AAChC,YAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAC,mCAAD,CAAvB;;AACA,UAAIY,GAAG,CAACC,EAAR,EAAY;AACV,cAAM;AAAET,UAAAA;AAAF,YAAS,MAAMQ,GAAG,CAACE,IAAJ,EAArB;AACA,YAAIV,EAAJ,EAAQC,KAAK,CAACD,EAAD,CAAL;AACT;AACF,KAND;;AAOAO,IAAAA,aAAa;AACd,GATQ,EASN,EATM,CAAT;;AAWA,QAAMI,gBAAgB,GAAG,YAAY;AACnCR,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,UAAMK,GAAG,GAAG,MAAMZ,KAAK,CAAE,QAAOI,EAAG,EAAZ,CAAvB;AACA,UAAMY,IAAI,GAAG,MAAMJ,GAAG,CAACE,IAAJ,EAAnB;;AACA,QAAIE,IAAJ,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAP,MAAAA,UAAU,CAACO,IAAI,CAACG,YAAN,CAAV;AACD;;AACDZ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GATD;;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAUH,EAAE,GAAGA,EAAH,GAAQ,EAApB,CADF,EAEGI,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFd,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGJ,EAAE,IACD;AAAQ,IAAA,QAAQ,EAAEE,QAAlB;AAA4B,IAAA,OAAO,EAAES,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QAAQ,GAAG,UAAH,GAAgB,aAD3B,CALJ,CADF;AAYD","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { useState, useEffect } from 'react'\n\nexport default function TestApp() {\n  const [ip, setIp] = useState('')\n  const [fetching, setFetching] = useState(false)\n  const [country, setCountry] = useState<string | undefined>(undefined)\n\n  useEffect(() => {\n    const handleFetchIp = async () => {\n      const res = await fetch('https://api.ipify.org?format=json')\n      if (res.ok) {\n        const { ip } = await res.json()\n        if (ip) setIp(ip)\n      }\n    }\n    handleFetchIp()\n  }, [])\n\n  const handleGetCountry = async () => {\n    setFetching(true)\n    const res = await fetch(`/api/${ip}`)\n    const data = await res.json()\n    if (data) {\n      console.log(data)\n      setCountry(data.country_name)\n    }\n    setFetching(false)\n  }\n\n  return (\n    <div>\n      <div>IP: {ip ? ip : ''}</div>\n      {country && <div></div>}\n      <br />\n      {ip && (\n        <button disabled={fetching} onClick={handleGetCountry}>\n          {fetching ? 'Fetching' : 'Get Country'}\n        </button>\n      )}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}