{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport fetch from 'isomorphic-unfetch';\n\nvar App = function App(_ref) {\n  var ip = _ref.ip;\n  //   ;(async () => {\n  //     console.log(await ipify({ useIPv6: false }))\n  //     //=> '82.142.31.236'\n  //   })()\n  console.log(ip);\n  return null;\n};\n\nApp.getInitialProps = function _callee() {\n  var res, ip;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.ipify.org'));\n\n        case 2:\n          res = _context.sent;\n          //   const ip = await ipify({ useIPv6: false })\n          ip = res.json();\n          return _context.abrupt(\"return\", {\n            ip: ip\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/paulvandyk/Projects/Kenai/ipinfo/pages/index.tsx"],"names":["fetch","App","ip","console","log","getInitialProps","res","json"],"mappings":";AACA,OAAOA,KAAP,MAAkB,oBAAlB;;AACA,IAAMC,GAAkB,GAAG,SAArBA,GAAqB,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;AACrC;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,SAAO,IAAP;AACD,CAPD;;AASAD,GAAG,CAACI,eAAJ,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEFL,KAAK,CAAC,uBAAD,CAFH;;AAAA;AAEdM,UAAAA,GAFc;AAGpB;AACMJ,UAAAA,EAJc,GAITI,GAAG,CAACC,IAAJ,EAJS;AAAA,2CAKb;AAAEL,YAAAA,EAAE,EAAFA;AAAF,WALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAQA,eAAeD,GAAf","sourcesContent":["import { NextPage } from 'next'\nimport fetch from 'isomorphic-unfetch'\nconst App: NextPage<any> = ({ ip }) => {\n  //   ;(async () => {\n  //     console.log(await ipify({ useIPv6: false }))\n  //     //=> '82.142.31.236'\n  //   })()\n  console.log(ip)\n  return null\n}\n\nApp.getInitialProps = async () => {\n  //   const ipify = require('ipify')\n  const res = await fetch('https://api.ipify.org')\n  //   const ip = await ipify({ useIPv6: false })\n  const ip = res.json()\n  return { ip }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}