{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar TestApp = function TestApp(_ref) {\n  var ip = _ref.ip;\n  return null;\n}; // {\n//   //   const [ip, setIp] = useState('')\n//   const [fetching, setFetching] = useState(false)\n//   const [country, setCountry] = useState<string | undefined>(undefined)\n//   //   useEffect(() => {\n//   //     const handleFetchIp = async () => {\n//   //       const res = await fetch('https://api.ipify.org?format=json')\n//   //       if (res.ok) {\n//   //         const { ip } = await res.json()\n//   //         if (ip) setIp(ip)\n//   //       }\n//   //     }\n//   //     handleFetchIp()\n//   //   }, [])\n//   const handleGetCountry = async () => {\n//     setFetching(true)\n//     const res = await fetch(`/api/${ip}`)\n//     const data = await res.json()\n//     if (data) {\n//       console.log(data)\n//       setCountry(data.country_name)\n//     }\n//     setFetching(false)\n//   }\n//   return (\n//     <div>\n//       <div>IP: {ip ? ip : ''}</div>\n//       {country && <div>Country: {country}</div>}\n//       <br />\n//       {ip && (\n//         <button disabled={fetching} onClick={handleGetCountry}>\n//           {fetching ? 'Fetching' : 'Get Country'}\n//         </button>\n//       )}\n//     </div>\n//   )\n// }\n\n\nTestApp.getInitialProps = function _callee(_ref2) {\n  var req, res, ip;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref2.req, res = _ref2.res;\n          ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress;\n          res.setHeader('Content-Type', 'application/json');\n          res.write(JSON.stringify({\n            ip: ip\n          }));\n          res.end(); //   return { ip }\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default TestApp;","map":{"version":3,"sources":["/Users/paulvandyk/Projects/Kenai/ipinfo/pages/index.tsx"],"names":["TestApp","ip","getInitialProps","req","res","headers","connection","remoteAddress","setHeader","write","JSON","stringify","end"],"mappings":";;AAIA,IAAMA,OAAsB,GAAG,SAAzBA,OAAyB;AAAA,MAAGC,EAAH,QAAGA,EAAH;AAAA,SAAY,IAAZ;AAAA,CAA/B,C,CACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAOAD,OAAO,CAACE,eAAR,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT,EAAcC,GAAd,SAAcA,GAAd;AAClBH,UAAAA,EADkB,GACbE,GAAG,CAACE,OAAJ,CAAY,iBAAZ,KAAkCF,GAAG,CAACG,UAAJ,CAAeC,aADpC;AAExBH,UAAAA,GAAG,CAACI,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAJ,UAAAA,GAAG,CAACK,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAe;AAAEV,YAAAA,EAAE,EAAFA;AAAF,WAAf,CAAV;AACAG,UAAAA,GAAG,CAACQ,GAAJ,GAJwB,CAKxB;;AALwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAQA,eAAeZ,OAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { useState, useEffect } from 'react'\nimport { NextPage, NextPageContext, NextApiRequest, NextApiResponse } from 'next'\n\nconst TestApp: NextPage<any> = ({ ip }) => null\n// {\n//   //   const [ip, setIp] = useState('')\n//   const [fetching, setFetching] = useState(false)\n//   const [country, setCountry] = useState<string | undefined>(undefined)\n\n//   //   useEffect(() => {\n//   //     const handleFetchIp = async () => {\n//   //       const res = await fetch('https://api.ipify.org?format=json')\n//   //       if (res.ok) {\n//   //         const { ip } = await res.json()\n//   //         if (ip) setIp(ip)\n//   //       }\n//   //     }\n//   //     handleFetchIp()\n//   //   }, [])\n\n//   const handleGetCountry = async () => {\n//     setFetching(true)\n//     const res = await fetch(`/api/${ip}`)\n//     const data = await res.json()\n//     if (data) {\n//       console.log(data)\n//       setCountry(data.country_name)\n//     }\n//     setFetching(false)\n//   }\n\n//   return (\n//     <div>\n//       <div>IP: {ip ? ip : ''}</div>\n//       {country && <div>Country: {country}</div>}\n//       <br />\n//       {ip && (\n//         <button disabled={fetching} onClick={handleGetCountry}>\n//           {fetching ? 'Fetching' : 'Get Country'}\n//         </button>\n//       )}\n//     </div>\n//   )\n// }\n\ninterface PageContext extends NextPageContext {\n  req: NextApiRequest\n  res: NextApiResponse\n}\n\nTestApp.getInitialProps = async ({ req, res }: PageContext) => {\n  const ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress\n  res.setHeader('Content-Type', 'application/json')\n  res.write(JSON.stringify({ ip }))\n  res.end()\n  //   return { ip }\n}\n\nexport default TestApp\n"]},"metadata":{},"sourceType":"module"}