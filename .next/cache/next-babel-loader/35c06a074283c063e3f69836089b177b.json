{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar App = function App(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  //   ;(async () => {\n  //     console.log(await ipify({ useIPv6: false }))\n  //     //=> '82.142.31.236'\n  //   })()\n  return null;\n};\n\nApp.getInitialProps = function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/paulvandyk/Projects/Kenai/ipinfo/pages/index.tsx"],"names":["App","getInitialProps"],"mappings":";;;AAEA,IAAMA,GAAkB,GAAG,SAArBA,GAAqB,OAAQ;AAAA;;AACjC;AACA;AACA;AACA;AACA,SAAO,IAAP;AACD,CAND;;AAQAA,GAAG,CAACC,eAAJ,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAMA,eAAeD,GAAf","sourcesContent":["import { NextPage } from 'next'\n\nconst App: NextPage<any> = ({}) => {\n  //   ;(async () => {\n  //     console.log(await ipify({ useIPv6: false }))\n  //     //=> '82.142.31.236'\n  //   })()\n  return null\n}\n\nApp.getInitialProps = async () => {\n  //   const ipify = require('ipify')\n  //   const ip = await ipify({ useIPv6: false })\n  //   return { ip }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}