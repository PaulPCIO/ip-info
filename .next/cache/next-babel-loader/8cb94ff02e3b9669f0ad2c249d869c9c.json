{"ast":null,"code":"var _jsxFileName = \"/Users/paulvandyk/Projects/Kenai/ipinfo/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { useState, useEffect } from 'react';\nexport default function TestApp() {\n  const {\n    0: ip,\n    1: setIp\n  } = useState('unset');\n  useEffect(() => {\n    const handleFetchIp = async () => {\n      const res = await fetch('https://api.ipify.org?format=json');\n\n      if (res.ok) {\n        console.log(res);\n        console.log(res.body);\n        const ip = await res.json();\n        debugger;\n        setIp(ip);\n      }\n    };\n\n    handleFetchIp();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"IP: \", ip ? ip : 'unset'));\n}","map":{"version":3,"sources":["/Users/paulvandyk/Projects/Kenai/ipinfo/pages/index.tsx"],"names":["fetch","useState","useEffect","TestApp","ip","setIp","handleFetchIp","res","ok","console","log","body","json"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM;AAAA,OAACC,EAAD;AAAA,OAAKC;AAAL,MAAcJ,QAAQ,CAAC,OAAD,CAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,aAAa,GAAG,YAAY;AAChC,YAAMC,GAAG,GAAG,MAAMP,KAAK,CAAC,mCAAD,CAAvB;;AACA,UAAIO,GAAG,CAACC,EAAR,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACA,cAAMP,EAAE,GAAG,MAAMG,GAAG,CAACK,IAAJ,EAAjB;AACA;AACAP,QAAAA,KAAK,CAACD,EAAD,CAAL;AACD;AACF,KATD;;AAUAE,IAAAA,aAAa;AACd,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAUF,EAAE,GAAGA,EAAH,GAAQ,OAApB,CADF,CADF;AAKD","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { useState, useEffect } from 'react'\n\nexport default function TestApp() {\n  const [ip, setIp] = useState('unset')\n\n  useEffect(() => {\n    const handleFetchIp = async () => {\n      const res = await fetch('https://api.ipify.org?format=json')\n      if (res.ok) {\n        console.log(res)\n        console.log(res.body)\n        const ip = await res.json()\n        debugger\n        setIp(ip as any)\n      }\n    }\n    handleFetchIp()\n  }, [])\n\n  return (\n    <div>\n      <div>IP: {ip ? ip : 'unset'}</div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}