{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar ipify = require('ipify');\n\nvar App = function App(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  ;\n\n  (function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = console;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ipify({\n              useIPv6: false\n            }));\n\n          case 3:\n            _context.t1 = _context.sent;\n\n            _context.t0.log.call(_context.t0, _context.t1);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  })();\n\n  return null;\n};\n\nApp.getInitialProps = function _callee2() {\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/paulvandyk/Projects/Kenai/ipinfo/pages/index.tsx"],"names":["ipify","require","App","console","useIPv6","log","getInitialProps"],"mappings":";;;AACA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,GAAkB,GAAG,SAArBA,GAAqB,OAAQ;AAAA;;AACjC;;AAAC,GAAC;AAAA;AAAA;AAAA;AAAA;AAAA,0BACAC,OADA;AAAA;AAAA,6CACkBH,KAAK,CAAC;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAAD,CADvB;;AAAA;AAAA;;AAAA,wBACQC,GADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAID,SAAO,IAAP;AACD,CAND;;AAQAH,GAAG,CAACI,eAAJ,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAKA,eAAeJ,GAAf","sourcesContent":["import { NextPage } from 'next'\nconst ipify = require('ipify')\n\nconst App: NextPage<any> = ({}) => {\n  ;(async () => {\n    console.log(await ipify({ useIPv6: false }))\n    //=> '82.142.31.236'\n  })()\n  return null\n}\n\nApp.getInitialProps = async () => {\n  //   const ip = await ipify({ useIPv6: false })\n  //   return { ip }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}